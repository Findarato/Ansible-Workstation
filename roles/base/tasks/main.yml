---
- name: Make systemd mounts
  ansible.builtin.template:
    owner: root
    src: "mount-systemd.mount.j2"
    dest: "/etc/systemd/system/{{ item.name }}.mount"
  with_items:
    - "{{ automounts }}"
  when:
    - enable_automounts

- name: Make systemd Automounts
  ansible.builtin.template:
    owner: root
    src: "mount-systemd.automount.j2"
    dest: "/etc/systemd/system/{{ item.name }}.automount"
  with_items:
    - "{{ automounts }}"
  when:
    - enable_automounts

- name: Setup mounts
  ansible.builtin.systemd:
    daemon_reload: yes
    state: started
    name: "{{ item.name }}.automount"
  with_items:
    - "{{ automounts }}"
  when:
    - enable_automounts

- name:               Ensure Scratch Dir exsists
  file:
    dest:             "{{ scratch_dir }}"
    mode:             0770
    owner:            "{{ local_user }}"
    state:            directory

- name:               Ensure Tilix config directory exsists
  file:
    dest:             "/home/{{ local_user }}/.config/tilix/schemes/"
    mode:             0700
    owner:            "{{ local_user }}"
    state:            directory

- name:               Create src folder
  file:
    path:             "/home/{{ local_user }}/Documents/src/"
    state:            directory
    owner:            "{{ local_user }}"
    mode:             0750

- name:               Clone dotfiles repos
  become:             false
  git:
    repo:             "{{ dotfiles_repo_RW }}"
    dest:             "/home/{{ local_user }}/dotFiles"
    key_file:         "/home/{{ local_user }}/.ssh/github"
    accept_hostkey:   yes
    track_submodules: yes
    update:           yes
    # version:          v1.7
  register:           result
  ignore_errors:      true
  tags:
    - git
    - dotfiles

- name:               Copy Tilix Themes
  copy:
    src:              "/home/{{ local_user }}/dotFiles/Tilix-Themes/{{ item }}"
    dest:             "/home/{{ local_user }}/.config/tilix/schemes/"
  with_items:
    - "{{ tilix_themes }}"
  when:               result is changed


- name: Setup and Install i3
  include_tasks: "{{ ansible_distribution }}/i3.yml"
  tags:
    - i3
    - install
  when:
    - install_i3 == true

- name:               Running OS specific Configurations and Commands
  include_tasks:            "{{ include_file }}"
  with_items:
    - "{{ ansible_distribution }}/repos.yml"
    - "{{ ansible_distribution }}/system.yml"
    - "{{ ansible_distribution }}/packages.yml"
    # - "{{ ansible_distribution }}/services.yml"
    # - "{{ ansible_distribution }}/configuration.yml"
  loop_control:
    loop_var:         include_file
  tags:
    - configuration

- name: Configure the system
  include_tasks: "{{ ansible_distribution }}/configuration.yml"
  tags:
    - dconf
    - install
    - configuration

- name: Setup and install Flatpak
  include_tasks: "{{ ansible_distribution }}/flatpak.yml"
  tags:
    - flatpak
    - install
    - configuration

- name: Setup Ram CACHE fstab
  mount:
    path: /mnt/cache
    src: tmpfs
    fstype: tmpfs
    state: present
    opts: "nodev,nosuid,noexec,nodiratime,size={{ ram_cache_size }}"
  when:
    - ram_cache == true


...