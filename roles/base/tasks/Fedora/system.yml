#!/usr/bin/env ansible-playbook
---
#Custom Shortcut for Tilix
# gsettings set org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0 name "Launch Tilix"
# gsettings set org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0 binding '<Primary><Alt>t'
# gsettings set org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0 command "tilix"

# @TODO:      ALL of this needs work. It fails when it succeeds

#- name:      Enable flathub repo
#  command:   "flatpak remote-add {{ item }}"
#  register:  flatpak_repo
#  changed_when: "'already exists' not in flatpak_repo.stderr"
#  failed_when: "'already exists' not in flatpak_repo.stderr"
#  with_items:
#    - "gnome https://sdk.gnome.org/gnome.flatpakrepo"
#    - "flathub https://flathub.org/repo/flathub.flatpakrepo"

#- name:      Install Gnome MPV
#  command:   flatpak install flathub io.github.GnomeMpv -y

# Flatpacks to install. Need to figure out how to do this
# http:       //baedert.org/repo/org.baedert.corebird.flatpakref


# This will probably have to be adjusted for success
#- name:      Install flatpaks
#  command:      flatpak install http: //baedert.org/repo/org.baedert.corebird.flatpakref
#  register:  flatpak_install
#  failed_when: "'already installed' not in flatpak_install.stderr"
#  changed_when: "'already installed' not in flatpak_install.stderr"

#flatpak install --from http://baedert.org/repo/org.baedert.corebird.flatpakref


- name:       Install Slack
  dnf:
    name:     "https://downloads.slack-edge.com/linux_releases/slack-3.0.2-0.1.fc21.x86_64.rpm"
    state:    present
  when:
    - install_slack == true

- name:       Install Nvidia Cuda
  dnf:
    name:     "{{ item }}"
    state:    present
  with_items:
    - cuda
    - nvidia-driver-cuda
    - cuda-cudart
  when:
    - install_nvidia == true

- name:       Install Nvidia Docker
  dnf:
    name:     "https://github.com/NVIDIA/nvidia-docker/releases/download/v1.0.1/nvidia-docker-1.0.1-1.x86_64.rpm"
    state:    present
  when:
    - install_docker == true
    - install_nvidia == true

- name:       Install Nvidia-modprobe
  dnf:
    name:     nvidia-modprobe
    state:    present
  when:
    - install_docker == true
    - install_nvidia == true

# - name:     Enable and start nvidia-docker service
#   service:
#     name:   nvidia-docker
#     state:  started
#     enabled: yes
#   when:
#     - install_docker == true
#     - install_nvidia == true
