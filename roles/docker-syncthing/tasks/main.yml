---
# tasks file for docker-syncthing

- name: Ensure old docker python is missing
  pip:
    name:       docker
    state:      absent

- name: Ensure python libs are installed
  pip:
    name:       docker-py
    state:      latest


- name: Create Docker paths
  file:
    path: "{{ docker_syncthing_storage }}/{{ item }}"
    state: directory
    owner: "{{ local_user }}"
    group: docker
    mode: 0775
  with_items:
    - config
    - data

- name: Create Docker paths
  file:
    path: "/mnt/syncthing/{{ local_user }}/{{ item }}"
    state: directory
    owner: "{{ local_user }}"
    group: docker
    mode: 0775
  with_items:
    - documents

- name: Create Syncthing container
  become: False
  docker_container:
    name: syncthing
    image:  linuxserver/syncthing
    state: started
    restart_policy: unless-stopped
    hostname: syncthing
    recreate: yes
    restart: yes
    pull: true
    exposed_ports:
      - 8384
      - 22000
      - 21027/udp
    published_ports:
      - 8384:8384
      - 22000:22000
      - 21027:21027/udp
    volumes:
      - "{{ docker_syncthing_storage }}/data/:/mnt/data/"
      - "{{ docker_syncthing_storage }}/config:/config"
      # - "/mnt/syncthing/{{ local_user }}/documents:/mnt/documents"
      - "/home/{{ local_user }}/Documents:/mnt/documents"
    env:
      TZ: America/Chicago
      PUID: 1000
      PGID: 1001


# - name: Open Ports for Syncthing
#   firewalld:
#     port: "{{ item }}"
#     permanent: true
#     state: enabled
#   with_items:
#     - "{{ docker_ports }}"
#   notify: Restart firewalld

# curl -XGET -H "X-API-Key: MGvekpwkjn9uUTHFyAXfPDqUAdEmD6z4" http://localhost:8384/rest/system/status
# - name: Get ID from API
#   uri:
#     url: http://localhost:8384/rest/system/status
#     method: get
#     body_format: json
#     return_content: yes
#     headers:
#       Content-Type: "application/json"
#       X-API-Key: MGvekpwkjn9uUTHFyAXfPDqUAdEmD6z4
#   register: api_result

#    # body: "{{ lookup('file','mesos-consul.json') }}"